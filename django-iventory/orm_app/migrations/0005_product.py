# Generated by Django 5.0.7 on 2024-07-30 05:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orm_app', '0004_attribute'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(null=True)),
                ('is_digital', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('IS', 'In Stock'), ('OOS', 'Out Of Stock'), ('BO', 'Back Ordered')], default='OOS', max_length=3)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm_app.category')),
                ('seasonal_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orm_app.seasonalevent')),
            ],
        ),
        migrations.CreateModel(
            name='Product_ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orm_app.product')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orm_app.producttype')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ManyToManyField(related_name='product_type', through='orm_app.Product_ProductType', to='orm_app.producttype'),
        ),
        migrations.RunSQL("""
        ALTER TABLE orm_app_product
        ADD CONSTRAINT  orm_app_product_chk_empty_name
        CHECK (name <> '' AND name is NOT NULL)             
        """),
        migrations.RunSQL("""
            CREATE OR REPLACE FUNCTION lowercase_name_trigger()
            RETURNS TRIGGER AS $$
            BEGIN
                NEW.name := LOWER(NEW.name);
                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;
             
            CREATE TRIGGER  product_lowercase_name_trigger
            BEFORE INSERT OR UPDATE ON orm_app_product
            FOR EACH ROW
            EXECUTE FUNCTION lowercase_name_trigger();
            """),
        migrations.RunSQL("""
        ALTER TABLE orm_app_product
        ADD CONSTRAINT  orm_app_product_chk_slug_format
        CHECK (slug ~ '^[a-z0-9_-]+$')             
        """),
    ]
